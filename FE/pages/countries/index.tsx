import Head from "next/head";
import Link from "next/link";
import { getSession } from "next-auth/react";
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import { CountryForm, ListItems } from "../../components/Countries";
import { activeTabSelectorFactory } from "../../redux/layouts/selectors";
import { setActivePageAction } from "../../redux/layouts";
import BackendLayout from "../../components/Layout/BackendLayout";

export default function Index({
  session,
  locale,
}: {
  session: any;
  locale: string;
}) {
  if (!session) return <></>;
  const activeTabLayout = useSelector(activeTabSelectorFactory("countries"));
  const activeLayout = activeTabLayout;
  const dispatch = useDispatch();

  const changeLayout = (type: string) => {
    dispatch(
      setActivePageAction({
        type: "countries",
        modifier: type,
      })
    );
  };

  const formData = {
    id: null,
    name: "",
    active: true,
    iso: "",
    iso3: "",
    currency: "",
    currency_name: "",
    created_at: null,
    updated_at: null,
  };

  return (
    <>
      <Head>
        <title>MapKids - Countries</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      {/*<h2 className="mt-10 text-lg font-medium intro-y">Countries List</h2>*/}
      <h2 className="mt-10 text-lg font-medium intro-y">
        {activeLayout.tab !== "list" && (
          // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions
          <span
            onClick={() => {
              dispatch(
                setActivePageAction({
                  type: "countries",
                  modifier: "list",
                })
              );
              // dispatch(loadMapAction(false));
            }}
            className="cursor-pointer inline-block pl-[30px] text-[12px] mr-[10px] back-arrow"
          />
        )}
        Countries List
      </h2>
      {/*<Link href={`/country-eidt`}>Edit</Link>*/}
      {activeLayout.tab === "list" && (
        <>
          <ListItems locale={locale} />
        </>
      )}
      {activeLayout.tab === "edit" && (
        <>
          <CountryForm countryData={formData} />
          {/*<div className="flex mt-7">*/}
          {/*  <div className="w-1/2">*/}
          {/*    /!*<MapView />*!/*/}
          {/*    <MapForm isLoad={false} />*/}
          {/*  </div>*/}
          {/*  <div className="w-full">*/}
          {/*    <CountryForm countryData={formData} />*/}
          {/*  </div>*/}
          {/*</div>*/}
          {/*<div className="clear-both /"></div>*/}
        </>
      )}
    </>
  );
}
Index.Layout = BackendLayout;

export async function getServerSideProps(context: any) {
  const { locale } = context;
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: { destination: `/auth/signin` },
    };
  }

  return {
    props: {
      session,
      locale,
      messages: {
        ...require(`../../messages/${locale}.json`),
      },
    },
  };
}
