import Head from "next/head";
import { getSession } from "next-auth/react";
import React, { useEffect, useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { ListItems } from "../../components/Countries";
import { activeTabSelectorFactory } from "../../redux/layouts/selectors";
import { setActivePageAction } from "../../redux/layouts";
import BackendLayout from "../../components/Layout/BackendLayout";

export default function Index({
  session,
  locale,
}: {
  session: any;
  locale: string;
}) {
  if (!session) return <></>;
  const activeTabLayout = useSelector(activeTabSelectorFactory("articles"));
  const activeLayout = activeTabLayout;
  const dispatch = useDispatch();

  const changeLayout = (type: string) => {
    dispatch(
      setActivePageAction({
        type: "articles",
        modifier: type,
      })
    );
  };

  const formData = {
    id: null,
    title: "",
    title_image: "",
    article_text: "",
    status: true,
    created_at: null,
    updated_at: null,
  };

  return (
    <>
      <Head>
        <title>MapKids - Countries</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <h2 className="mt-10 text-lg font-medium intro-y">Countries List</h2>
      {activeLayout.tab === "list" && (
        <>
          <ListItems locale={locale} />
        </>
      )}
    </>
  );
}
Index.Layout = BackendLayout;

export async function getServerSideProps(context: any) {
  const { locale } = context;
  const session = await getSession(context);

  if (!session) {
    return {
      redirect: { destination: `/auth/signin` },
    };
  }

  return {
    props: {
      session,
      locale,
      messages: {
        ...require(`../../messages/${locale}.json`),
      },
    },
  };
}
